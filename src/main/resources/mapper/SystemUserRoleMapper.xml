<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ron.mapper.SystemUserRoleMapper">
    <select id="getRole" resultType="com.ron.entity.SystemUserRole">
        select * from r_system_role where id = #{roleId}
    </select>
    
    <select id="getChildRole" resultType="com.ron.entity.SystemUserRole">
        select * from r_system_role where parent_id = #{parentId}
    </select>
    
    <!--获取所有角色列表-->
    <select id="getAllRoleList" resultType="com.ron.entity.SystemUserRole">
        select * from r_system_role
    </select>
    
    <!--获取一级角色列表-->
    <select id="getRoleList" resultType="com.ron.entity.SystemUserRole">
        select * from r_system_role where parent_id = 0
    </select>
    
    <!--获取二级角色列表-->
    <select id="getChildRoleList" resultType="com.ron.entity.SystemUserRole">
        select * from r_system_role where parent_id = #{parentId}
    </select>
    
    <!--获取所有二级角色列表-->
    <select id="getAllChildRoleList" resultType="com.ron.entity.SystemUserRole">
        select * from r_system_role where parent_id > 0;
    </select>
    
    <select id="checkRole" resultType="com.ron.entity.SystemUserRole">
        select id from r_system_role where role_name = #{roleName} and parent_id = #{parentId}
    </select>
    
    <insert id="addRole" useGeneratedKeys="true" keyProperty="id" parameterType="com.ron.entity.SystemUserRole">
        insert into r_system_role(role_name, parent_id, create_by)
        values (#{roleName}, #{parentId}, #{createBy})
    </insert>
    
    <delete id="deleteRole" flushCache="true" statementType="PREPARED" timeout="20">
        delete from r_system_role where id = #{roleId}
    </delete>
    
    <delete id="deleteChildRole" flushCache="true" statementType="PREPARED" timeout="20">
      delete from r_system_role where parent_id = ${parentId}
    </delete>
    
    <update id="editRole" flushCache="true" statementType="PREPARED" timeout="20" parameterType="com.ron.entity.SystemUserRole">
        update r_system_role set role_name = #{roleName}, parent_id = #{parentId}, create_by = #{createBy} where id = #{id}
    </update>
    
    <update id="authorizationRole" flushCache="true" statementType="PREPARED" timeout="20" parameterType="com.ron.entity.SystemUserRole">
        update r_system_role set moduleIds = #{moduleIds}, create_by = #{createBy} where id = #{id} and parent_id = #{parentId}
    </update>
</mapper>